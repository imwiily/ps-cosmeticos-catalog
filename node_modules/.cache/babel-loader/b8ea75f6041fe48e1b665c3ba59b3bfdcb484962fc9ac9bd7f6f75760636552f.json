{"ast":null,"code":"// src/services/api.js\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\nclass ApiService {\n  // Método auxiliar para fazer requests\n  async makeRequest(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API Request Error:', error);\n      throw error;\n    }\n  }\n\n  // Pegar todas as categorias\n  async getCategorias() {\n    const response = await this.makeRequest('/categorias');\n    return response.content || [];\n  }\n\n  // Pegar todas as subcategorias\n  async getSubcategorias() {\n    const response = await this.makeRequest('/subcategorias');\n    return response.content || [];\n  }\n\n  // Pegar subcategorias por categoria\n  async getSubcategoriasPorCategoria(categoriaId) {\n    const response = await this.makeRequest(`/categorias/subcategorias/${categoriaId}`);\n    return response.data || [];\n  }\n\n  // Pegar todos os produtos\n  async getProdutos(page = 0, size = 12) {\n    try {\n      const response = await this.makeRequest(`/produtos?page=${page}&size=${size}`);\n      console.log('API produtos response:', response); // Debug\n\n      // Verificar se a resposta tem o formato esperado\n      if (response.success && response.data) {\n        return response.data;\n      } else if (response.content) {\n        // Formato alternativo da API\n        return response;\n      } else {\n        console.warn('Unexpected API response format:', response);\n        return {\n          content: [],\n          page: {}\n        };\n      }\n    } catch (error) {\n      console.error('Error in getProdutos:', error);\n      throw error;\n    }\n  }\n\n  // Pegar produto por ID\n  async getProdutoPorId(id) {\n    const response = await this.makeRequest(`/produtos/${id}`);\n    return response.data;\n  }\n\n  // Pegar produtos relacionados\n  async getProdutosRelacionados(id) {\n    const response = await this.makeRequest(`/produtos/relacionados/${id}`);\n    return response.data || {\n      content: [],\n      page: {}\n    };\n  }\n\n  // Pegar URL da imagem com tipo específico\n  getImageUrl(imageUrl, type = 'DISPLAY') {\n    if (!imageUrl) return null;\n    return `${imageUrl}?type=${type}`;\n  }\n\n  // Transformar dados da API para o formato esperado pelo frontend\n  transformProdutoData(apiProduct) {\n    var _apiProduct$category, _apiProduct$subcatego;\n    if (!apiProduct) {\n      console.warn('Produto API é null ou undefined');\n      return null;\n    }\n    console.log('Transforming produto:', apiProduct); // Debug\n\n    return {\n      id: apiProduct.id,\n      nome: apiProduct.name || apiProduct.nome || 'Produto sem nome',\n      categoria: ((_apiProduct$category = apiProduct.category) === null || _apiProduct$category === void 0 ? void 0 : _apiProduct$category.nome) || apiProduct.categoria || 'Sem categoria',\n      subcategoria: ((_apiProduct$subcatego = apiProduct.subcategory) === null || _apiProduct$subcatego === void 0 ? void 0 : _apiProduct$subcatego.nome) || apiProduct.subcategoria || '',\n      preco: apiProduct.price ? `R$ ${apiProduct.price.toFixed(2).replace('.', ',')}` : 'Preço não disponível',\n      precoDesconto: apiProduct.discountPrice ? `R$ ${apiProduct.discountPrice.toFixed(2).replace('.', ',')}` : null,\n      imagem: this.getImageUrl(apiProduct.imageURL || apiProduct.imagem, 'DISPLAY'),\n      imagemIcone: this.getImageUrl(apiProduct.imageURL || apiProduct.imagem, 'ICON'),\n      imagemMedia: this.getImageUrl(apiProduct.imageURL || apiProduct.imagem, 'MID-DISPLAY'),\n      descricao: apiProduct.description || apiProduct.descricao || '',\n      descricaoCompleta: apiProduct.completeDescription || apiProduct.descricaoCompleta || '',\n      ingredientes: apiProduct.ingredients || apiProduct.ingredientes || [],\n      modoUso: apiProduct.howToUse || apiProduct.modoUso || '',\n      tags: apiProduct.tags || [],\n      slug: apiProduct.slug || '',\n      tipo: apiProduct.tipo || 'STATIC',\n      cores: apiProduct.cores || {},\n      ativo: apiProduct.active !== undefined ? apiProduct.active : true,\n      criadoEm: apiProduct.createAt || apiProduct.criadoEm,\n      // Campos simulados que não existem na API\n      rating: 4.5 + Math.random() * 0.8,\n      // Rating aleatório entre 4.5-5.3\n      avaliacoes: Math.floor(Math.random() * 200) + 50 // Avaliações aleatórias entre 50-249\n    };\n  }\n\n  // Transformar dados de categoria da API\n  transformCategoriaData(apiCategory) {\n    return {\n      id: apiCategory.id,\n      nome: apiCategory.nome,\n      slug: apiCategory.slug,\n      descricao: apiCategory.descricao || '',\n      imagem: this.getImageUrl(apiCategory.imageUrl, 'DISPLAY'),\n      totalProdutos: apiCategory.totalProdutos || 0,\n      ativo: apiCategory.ativo\n    };\n  }\n\n  // Buscar produtos por categoria\n  async getProdutosPorCategoria(categoria, page = 0, size = 12) {\n    // Como não há endpoint específico para filtrar por categoria,\n    // vamos pegar todos os produtos e filtrar no frontend\n    const response = await this.getProdutos(page, size * 3); // Pegar mais para compensar filtro\n    const produtosTransformados = response.content.map(produto => this.transformProdutoData(produto));\n    if (categoria === 'Todos') {\n      return {\n        content: produtosTransformados.slice(0, size),\n        page: response.page\n      };\n    }\n    const produtosFiltrados = produtosTransformados.filter(produto => produto.categoria.toLowerCase() === categoria.toLowerCase());\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n}\n\n// Criar instância singleton\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","makeRequest","endpoint","options","response","fetch","headers","ok","Error","status","data","json","error","console","getCategorias","content","getSubcategorias","getSubcategoriasPorCategoria","categoriaId","getProdutos","page","size","log","success","warn","getProdutoPorId","id","getProdutosRelacionados","getImageUrl","imageUrl","type","transformProdutoData","apiProduct","_apiProduct$category","_apiProduct$subcatego","nome","name","categoria","category","subcategoria","subcategory","preco","price","toFixed","replace","precoDesconto","discountPrice","imagem","imageURL","imagemIcone","imagemMedia","descricao","description","descricaoCompleta","completeDescription","ingredientes","ingredients","modoUso","howToUse","tags","slug","tipo","cores","ativo","active","undefined","criadoEm","createAt","rating","Math","random","avaliacoes","floor","transformCategoriaData","apiCategory","totalProdutos","getProdutosPorCategoria","produtosTransformados","map","produto","slice","produtosFiltrados","filter","toLowerCase","totalElements","length","totalPages","ceil","apiService"],"sources":["/Users/wiily/Personal Projects/Orders/PS Cosmeticos/Front-end/ps-cosmeticos/src/services/api.js"],"sourcesContent":["// src/services/api.js\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\n\nclass ApiService {\n  // Método auxiliar para fazer requests\n  async makeRequest(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API Request Error:', error);\n      throw error;\n    }\n  }\n\n  // Pegar todas as categorias\n  async getCategorias() {\n    const response = await this.makeRequest('/categorias');\n    return response.content || [];\n  }\n\n  // Pegar todas as subcategorias\n  async getSubcategorias() {\n    const response = await this.makeRequest('/subcategorias');\n    return response.content || [];\n  }\n\n  // Pegar subcategorias por categoria\n  async getSubcategoriasPorCategoria(categoriaId) {\n    const response = await this.makeRequest(`/categorias/subcategorias/${categoriaId}`);\n    return response.data || [];\n  }\n\n  // Pegar todos os produtos\n  async getProdutos(page = 0, size = 12) {\n    try {\n      const response = await this.makeRequest(`/produtos?page=${page}&size=${size}`);\n      console.log('API produtos response:', response); // Debug\n      \n      // Verificar se a resposta tem o formato esperado\n      if (response.success && response.data) {\n        return response.data;\n      } else if (response.content) {\n        // Formato alternativo da API\n        return response;\n      } else {\n        console.warn('Unexpected API response format:', response);\n        return { content: [], page: {} };\n      }\n    } catch (error) {\n      console.error('Error in getProdutos:', error);\n      throw error;\n    }\n  }\n\n  // Pegar produto por ID\n  async getProdutoPorId(id) {\n    const response = await this.makeRequest(`/produtos/${id}`);\n    return response.data;\n  }\n\n  // Pegar produtos relacionados\n  async getProdutosRelacionados(id) {\n    const response = await this.makeRequest(`/produtos/relacionados/${id}`);\n    return response.data || { content: [], page: {} };\n  }\n\n  // Pegar URL da imagem com tipo específico\n  getImageUrl(imageUrl, type = 'DISPLAY') {\n    if (!imageUrl) return null;\n    return `${imageUrl}?type=${type}`;\n  }\n\n  // Transformar dados da API para o formato esperado pelo frontend\n  transformProdutoData(apiProduct) {\n    if (!apiProduct) {\n      console.warn('Produto API é null ou undefined');\n      return null;\n    }\n\n    console.log('Transforming produto:', apiProduct); // Debug\n    \n    return {\n      id: apiProduct.id,\n      nome: apiProduct.name || apiProduct.nome || 'Produto sem nome',\n      categoria: apiProduct.category?.nome || apiProduct.categoria || 'Sem categoria',\n      subcategoria: apiProduct.subcategory?.nome || apiProduct.subcategoria || '',\n      preco: apiProduct.price ? `R$ ${apiProduct.price.toFixed(2).replace('.', ',')}` : 'Preço não disponível',\n      precoDesconto: apiProduct.discountPrice \n        ? `R$ ${apiProduct.discountPrice.toFixed(2).replace('.', ',')}` \n        : null,\n      imagem: this.getImageUrl(apiProduct.imageURL || apiProduct.imagem, 'DISPLAY'),\n      imagemIcone: this.getImageUrl(apiProduct.imageURL || apiProduct.imagem, 'ICON'),\n      imagemMedia: this.getImageUrl(apiProduct.imageURL || apiProduct.imagem, 'MID-DISPLAY'),\n      descricao: apiProduct.description || apiProduct.descricao || '',\n      descricaoCompleta: apiProduct.completeDescription || apiProduct.descricaoCompleta || '',\n      ingredientes: apiProduct.ingredients || apiProduct.ingredientes || [],\n      modoUso: apiProduct.howToUse || apiProduct.modoUso || '',\n      tags: apiProduct.tags || [],\n      slug: apiProduct.slug || '',\n      tipo: apiProduct.tipo || 'STATIC',\n      cores: apiProduct.cores || {},\n      ativo: apiProduct.active !== undefined ? apiProduct.active : true,\n      criadoEm: apiProduct.createAt || apiProduct.criadoEm,\n      // Campos simulados que não existem na API\n      rating: 4.5 + (Math.random() * 0.8), // Rating aleatório entre 4.5-5.3\n      avaliacoes: Math.floor(Math.random() * 200) + 50, // Avaliações aleatórias entre 50-249\n    };\n  }\n\n  // Transformar dados de categoria da API\n  transformCategoriaData(apiCategory) {\n    return {\n      id: apiCategory.id,\n      nome: apiCategory.nome,\n      slug: apiCategory.slug,\n      descricao: apiCategory.descricao || '',\n      imagem: this.getImageUrl(apiCategory.imageUrl, 'DISPLAY'),\n      totalProdutos: apiCategory.totalProdutos || 0,\n      ativo: apiCategory.ativo,\n    };\n  }\n\n  // Buscar produtos por categoria\n  async getProdutosPorCategoria(categoria, page = 0, size = 12) {\n    // Como não há endpoint específico para filtrar por categoria,\n    // vamos pegar todos os produtos e filtrar no frontend\n    const response = await this.getProdutos(page, size * 3); // Pegar mais para compensar filtro\n    const produtosTransformados = response.content.map(produto => \n      this.transformProdutoData(produto)\n    );\n\n    if (categoria === 'Todos') {\n      return {\n        content: produtosTransformados.slice(0, size),\n        page: response.page\n      };\n    }\n\n    const produtosFiltrados = produtosTransformados.filter(produto => \n      produto.categoria.toLowerCase() === categoria.toLowerCase()\n    );\n\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n}\n\n// Criar instância singleton\nconst apiService = new ApiService();\n\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}