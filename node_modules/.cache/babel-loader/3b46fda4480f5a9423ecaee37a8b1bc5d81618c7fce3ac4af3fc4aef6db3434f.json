{"ast":null,"code":"// src/services/api.js\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\nclass ApiService {\n  // Método auxiliar para fazer requests\n  async makeRequest(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API Request Error:', error);\n      // Retornar dados vazios em caso de erro para evitar quebras\n      return {\n        content: [],\n        data: {\n          content: [],\n          page: {}\n        },\n        page: {}\n      };\n    }\n  }\n\n  // Pegar todas as categorias\n  async getCategorias() {\n    const response = await this.makeRequest('/categorias');\n    return response.content || [];\n  }\n\n  // Pegar todas as subcategorias\n  async getSubcategorias() {\n    const response = await this.makeRequest('/subcategorias');\n    return response.content || [];\n  }\n\n  // Pegar subcategorias por categoria\n  async getSubcategoriasPorCategoria(categoriaId) {\n    const response = await this.makeRequest(`/categorias/subcategorias/${categoriaId}`);\n    return response.data || [];\n  }\n\n  // Pegar todos os produtos\n  async getProdutos(page = 0, size = 12) {\n    const response = await this.makeRequest(`/produtos?page=${page}&size=${size}`);\n    return response.data || {\n      content: [],\n      page: {}\n    };\n  }\n\n  // Pegar produto por ID\n  async getProdutoPorId(id) {\n    const response = await this.makeRequest(`/produtos/${id}`);\n    return response.data;\n  }\n\n  // Pegar produtos relacionados\n  async getProdutosRelacionados(id) {\n    const response = await this.makeRequest(`/produtos/relacionados/${id}`);\n    return response.data || {\n      content: [],\n      page: {}\n    };\n  }\n\n  // Pegar URL da imagem com tipo específico\n  getImageUrl(imageUrl, type = 'DISPLAY') {\n    if (!imageUrl) return null;\n    return `${imageUrl}?type=${type}`;\n  }\n\n  // Transformar dados da API para o formato esperado pelo frontend\n  transformProdutoData(apiProduct) {\n    var _apiProduct$category, _apiProduct$category2, _apiProduct$subcatego, _apiProduct$subcatego2;\n    // Verificações de segurança para evitar erros\n    if (!apiProduct) {\n      return null;\n    }\n    const price = apiProduct.price || 0;\n    const discountPrice = apiProduct.discountPrice || null;\n    return {\n      id: apiProduct.id || Math.random().toString(36).substr(2, 9),\n      nome: apiProduct.name || 'Produto sem nome',\n      categoria: ((_apiProduct$category = apiProduct.category) === null || _apiProduct$category === void 0 ? void 0 : _apiProduct$category.nome) || ((_apiProduct$category2 = apiProduct.category) === null || _apiProduct$category2 === void 0 ? void 0 : _apiProduct$category2.name) || 'Sem categoria',\n      subcategoria: ((_apiProduct$subcatego = apiProduct.subcategory) === null || _apiProduct$subcatego === void 0 ? void 0 : _apiProduct$subcatego.nome) || ((_apiProduct$subcatego2 = apiProduct.subcategory) === null || _apiProduct$subcatego2 === void 0 ? void 0 : _apiProduct$subcatego2.name) || 'Sem subcategoria',\n      preco: `R$ ${price.toFixed(2).replace('.', ',')}`,\n      precoDesconto: discountPrice ? `R$ ${discountPrice.toFixed(2).replace('.', ',')}` : null,\n      imagem: this.getImageUrl(apiProduct.imageURL, 'DISPLAY'),\n      // Para página de detalhes\n      imagemIcone: this.getImageUrl(apiProduct.imageURL, 'ICON'),\n      // Para miniaturas (não usar em cards)\n      imagemMedia: this.getImageUrl(apiProduct.imageURL, 'MID-DISPLAY'),\n      // ✅ Para cards (escala 0.5)\n      descricao: apiProduct.description || 'Sem descrição disponível',\n      descricaoCompleta: apiProduct.completeDescription || '',\n      ingredientes: apiProduct.ingredients || [],\n      modoUso: apiProduct.howToUse || '',\n      tags: apiProduct.tags || [],\n      slug: apiProduct.slug || '',\n      tipo: apiProduct.tipo || 'SIMPLE',\n      cores: apiProduct.cores || {},\n      ativo: apiProduct.active !== undefined ? apiProduct.active : true,\n      criadoEm: apiProduct.createAt || new Date().toISOString(),\n      // Campos simulados que não existem na API\n      rating: 4.5 + Math.random() * 0.8,\n      // Rating aleatório entre 4.5-5.3\n      avaliacoes: Math.floor(Math.random() * 200) + 50 // Avaliações aleatórias entre 50-249\n    };\n  }\n\n  // Transformar dados de categoria da API\n  transformCategoriaData(apiCategory) {\n    return {\n      id: apiCategory.id,\n      nome: apiCategory.nome,\n      slug: apiCategory.slug,\n      descricao: apiCategory.descricao || '',\n      imagem: this.getImageUrl(apiCategory.imageUrl, 'DISPLAY'),\n      totalProdutos: apiCategory.totalProdutos || 0,\n      ativo: apiCategory.ativo\n    };\n  }\n\n  // Buscar produtos por categoria\n  async getProdutosPorCategoria(categoria, page = 0, size = 12) {\n    // Como não há endpoint específico para filtrar por categoria,\n    // vamos pegar todos os produtos e filtrar no frontend\n    const response = await this.getProdutos(page, size * 3); // Pegar mais para compensar filtro\n    const produtosTransformados = response.content.map(produto => this.transformProdutoData(produto));\n    if (categoria === 'Todos') {\n      return {\n        content: produtosTransformados.slice(0, size),\n        page: response.page\n      };\n    }\n    const produtosFiltrados = produtosTransformados.filter(produto => produto.categoria.toLowerCase() === categoria.toLowerCase());\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n\n  // Buscar produtos por subcategoria\n  async getProdutosPorSubcategoria(categoria, subcategoria, page = 0, size = 12) {\n    // Pegar todos os produtos e filtrar por categoria e subcategoria\n    const response = await this.getProdutos(page, size * 4); // Pegar mais para compensar filtro duplo\n    const produtosTransformados = response.content.map(produto => this.transformProdutoData(produto));\n    let produtosFiltrados = produtosTransformados;\n\n    // Filtrar por categoria (se não for \"Todos\")\n    if (categoria !== 'Todos') {\n      produtosFiltrados = produtosFiltrados.filter(produto => produto.categoria.toLowerCase() === categoria.toLowerCase());\n    }\n\n    // Filtrar por subcategoria (se não for \"Todas\")\n    if (subcategoria !== 'Todas') {\n      produtosFiltrados = produtosFiltrados.filter(produto => produto.subcategoria.toLowerCase() === subcategoria.toLowerCase());\n    }\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n}\n\n// Criar instância singleton\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","makeRequest","endpoint","options","response","fetch","headers","ok","Error","status","data","json","error","console","content","page","getCategorias","getSubcategorias","getSubcategoriasPorCategoria","categoriaId","getProdutos","size","getProdutoPorId","id","getProdutosRelacionados","getImageUrl","imageUrl","type","transformProdutoData","apiProduct","_apiProduct$category","_apiProduct$category2","_apiProduct$subcatego","_apiProduct$subcatego2","price","discountPrice","Math","random","toString","substr","nome","name","categoria","category","subcategoria","subcategory","preco","toFixed","replace","precoDesconto","imagem","imageURL","imagemIcone","imagemMedia","descricao","description","descricaoCompleta","completeDescription","ingredientes","ingredients","modoUso","howToUse","tags","slug","tipo","cores","ativo","active","undefined","criadoEm","createAt","Date","toISOString","rating","avaliacoes","floor","transformCategoriaData","apiCategory","totalProdutos","getProdutosPorCategoria","produtosTransformados","map","produto","slice","produtosFiltrados","filter","toLowerCase","totalElements","length","totalPages","ceil","getProdutosPorSubcategoria","apiService"],"sources":["/Users/wiily/Personal Projects/Orders/PS Cosmeticos/Front-end/ps-cosmeticos/src/services/api.js"],"sourcesContent":["// src/services/api.js\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\n\nclass ApiService {\n  // Método auxiliar para fazer requests\n  async makeRequest(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API Request Error:', error);\n      // Retornar dados vazios em caso de erro para evitar quebras\n      return {\n        content: [],\n        data: { content: [], page: {} },\n        page: {}\n      };\n    }\n  }\n\n  // Pegar todas as categorias\n  async getCategorias() {\n    const response = await this.makeRequest('/categorias');\n    return response.content || [];\n  }\n\n  // Pegar todas as subcategorias\n  async getSubcategorias() {\n    const response = await this.makeRequest('/subcategorias');\n    return response.content || [];\n  }\n\n  // Pegar subcategorias por categoria\n  async getSubcategoriasPorCategoria(categoriaId) {\n    const response = await this.makeRequest(`/categorias/subcategorias/${categoriaId}`);\n    return response.data || [];\n  }\n\n  // Pegar todos os produtos\n  async getProdutos(page = 0, size = 12) {\n    const response = await this.makeRequest(`/produtos?page=${page}&size=${size}`);\n    return response.data || { content: [], page: {} };\n  }\n\n  // Pegar produto por ID\n  async getProdutoPorId(id) {\n    const response = await this.makeRequest(`/produtos/${id}`);\n    return response.data;\n  }\n\n  // Pegar produtos relacionados\n  async getProdutosRelacionados(id) {\n    const response = await this.makeRequest(`/produtos/relacionados/${id}`);\n    return response.data || { content: [], page: {} };\n  }\n\n  // Pegar URL da imagem com tipo específico\n  getImageUrl(imageUrl, type = 'DISPLAY') {\n    if (!imageUrl) return null;\n    return `${imageUrl}?type=${type}`;\n  }\n\n  // Transformar dados da API para o formato esperado pelo frontend\n  transformProdutoData(apiProduct) {\n    // Verificações de segurança para evitar erros\n    if (!apiProduct) {\n      return null;\n    }\n  \n    const price = apiProduct.price || 0;\n    const discountPrice = apiProduct.discountPrice || null;\n  \n    return {\n      id: apiProduct.id || Math.random().toString(36).substr(2, 9),\n      nome: apiProduct.name || 'Produto sem nome',\n      categoria: apiProduct.category?.nome || apiProduct.category?.name || 'Sem categoria',\n      subcategoria: apiProduct.subcategory?.nome || apiProduct.subcategory?.name || 'Sem subcategoria',\n      preco: `R$ ${price.toFixed(2).replace('.', ',')}`,\n      precoDesconto: discountPrice \n        ? `R$ ${discountPrice.toFixed(2).replace('.', ',')}` \n        : null,\n      imagem: this.getImageUrl(apiProduct.imageURL, 'DISPLAY'), // Para página de detalhes\n      imagemIcone: this.getImageUrl(apiProduct.imageURL, 'ICON'), // Para miniaturas (não usar em cards)\n      imagemMedia: this.getImageUrl(apiProduct.imageURL, 'MID-DISPLAY'), // ✅ Para cards (escala 0.5)\n      descricao: apiProduct.description || 'Sem descrição disponível',\n      descricaoCompleta: apiProduct.completeDescription || '',\n      ingredientes: apiProduct.ingredients || [],\n      modoUso: apiProduct.howToUse || '',\n      tags: apiProduct.tags || [],\n      slug: apiProduct.slug || '',\n      tipo: apiProduct.tipo || 'SIMPLE',\n      cores: apiProduct.cores || {},\n      ativo: apiProduct.active !== undefined ? apiProduct.active : true,\n      criadoEm: apiProduct.createAt || new Date().toISOString(),\n      // Campos simulados que não existem na API\n      rating: 4.5 + (Math.random() * 0.8), // Rating aleatório entre 4.5-5.3\n      avaliacoes: Math.floor(Math.random() * 200) + 50, // Avaliações aleatórias entre 50-249\n    };\n  }\n\n  // Transformar dados de categoria da API\n  transformCategoriaData(apiCategory) {\n    return {\n      id: apiCategory.id,\n      nome: apiCategory.nome,\n      slug: apiCategory.slug,\n      descricao: apiCategory.descricao || '',\n      imagem: this.getImageUrl(apiCategory.imageUrl, 'DISPLAY'),\n      totalProdutos: apiCategory.totalProdutos || 0,\n      ativo: apiCategory.ativo,\n    };\n  }\n\n  // Buscar produtos por categoria\n  async getProdutosPorCategoria(categoria, page = 0, size = 12) {\n    // Como não há endpoint específico para filtrar por categoria,\n    // vamos pegar todos os produtos e filtrar no frontend\n    const response = await this.getProdutos(page, size * 3); // Pegar mais para compensar filtro\n    const produtosTransformados = response.content.map(produto => \n      this.transformProdutoData(produto)\n    );\n\n    if (categoria === 'Todos') {\n      return {\n        content: produtosTransformados.slice(0, size),\n        page: response.page\n      };\n    }\n\n    const produtosFiltrados = produtosTransformados.filter(produto => \n      produto.categoria.toLowerCase() === categoria.toLowerCase()\n    );\n\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n\n  // Buscar produtos por subcategoria\n  async getProdutosPorSubcategoria(categoria, subcategoria, page = 0, size = 12) {\n    // Pegar todos os produtos e filtrar por categoria e subcategoria\n    const response = await this.getProdutos(page, size * 4); // Pegar mais para compensar filtro duplo\n    const produtosTransformados = response.content.map(produto => \n      this.transformProdutoData(produto)\n    );\n\n    let produtosFiltrados = produtosTransformados;\n\n    // Filtrar por categoria (se não for \"Todos\")\n    if (categoria !== 'Todos') {\n      produtosFiltrados = produtosFiltrados.filter(produto => \n        produto.categoria.toLowerCase() === categoria.toLowerCase()\n      );\n    }\n\n    // Filtrar por subcategoria (se não for \"Todas\")\n    if (subcategoria !== 'Todas') {\n      produtosFiltrados = produtosFiltrados.filter(produto => \n        produto.subcategoria.toLowerCase() === subcategoria.toLowerCase()\n      );\n    }\n\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n}\n\n// Criar instância singleton\nconst apiService = new ApiService();\n\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}