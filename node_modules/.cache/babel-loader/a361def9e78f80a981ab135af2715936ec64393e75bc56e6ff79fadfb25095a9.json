{"ast":null,"code":"// src/services/api.js\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\nclass ApiService {\n  // Método auxiliar para fazer requests\n  async makeRequest(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API Request Error:', error);\n      throw error;\n    }\n  }\n\n  // Pegar todas as categorias\n  async getCategorias() {\n    const response = await this.makeRequest('/categorias');\n    return response.content || [];\n  }\n\n  // Pegar todas as subcategorias\n  async getSubcategorias() {\n    const response = await this.makeRequest('/subcategorias');\n    return response.content || [];\n  }\n\n  // Pegar subcategorias por categoria\n  async getSubcategoriasPorCategoria(categoriaId) {\n    const response = await this.makeRequest(`/categorias/subcategorias/${categoriaId}`);\n    return response.data || [];\n  }\n\n  // Pegar todos os produtos\n  async getProdutos(page = 0, size = 12) {\n    const response = await this.makeRequest(`/produtos?page=${page}&size=${size}`);\n    return response.data || {\n      content: [],\n      page: {}\n    };\n  }\n\n  // Pegar produto por ID\n  async getProdutoPorId(id) {\n    const response = await this.makeRequest(`/produtos/${id}`);\n    return response.data;\n  }\n\n  // Pegar produtos relacionados\n  async getProdutosRelacionados(id) {\n    const response = await this.makeRequest(`/produtos/relacionados/${id}`);\n    return response.data || {\n      content: [],\n      page: {}\n    };\n  }\n\n  // Pegar URL da imagem com tipo específico\n  getImageUrl(imageUrl, type = 'DISPLAY') {\n    if (!imageUrl) return null;\n    return `${imageUrl}?type=${type}`;\n  }\n\n  // Transformar dados da API para o formato esperado pelo frontend\n  transformProdutoData(apiProduct) {\n    var _apiProduct$category, _apiProduct$subcatego, _apiProduct$price;\n    return {\n      id: apiProduct.id,\n      nome: apiProduct.name,\n      categoria: ((_apiProduct$category = apiProduct.category) === null || _apiProduct$category === void 0 ? void 0 : _apiProduct$category.nome) || 'Sem categoria',\n      subcategoria: ((_apiProduct$subcatego = apiProduct.subcategory) === null || _apiProduct$subcatego === void 0 ? void 0 : _apiProduct$subcatego.nome) || 'Sem subcategoria',\n      preco: `R$ ${(_apiProduct$price = apiProduct.price) === null || _apiProduct$price === void 0 ? void 0 : _apiProduct$price.toFixed(2).replace('.', ',')}`,\n      precoDesconto: apiProduct.discountPrice ? `R$ ${apiProduct.discountPrice.toFixed(2).replace('.', ',')}` : null,\n      imagem: this.getImageUrl(apiProduct.imageURL, 'DISPLAY'),\n      imagemIcone: this.getImageUrl(apiProduct.imageURL, 'ICON'),\n      imagemMedia: this.getImageUrl(apiProduct.imageURL, 'MID-DISPLAY'),\n      descricao: apiProduct.description || '',\n      descricaoCompleta: apiProduct.completeDescription || '',\n      ingredientes: apiProduct.ingredients || [],\n      modoUso: apiProduct.howToUse || '',\n      tags: apiProduct.tags || [],\n      slug: apiProduct.slug,\n      tipo: apiProduct.tipo,\n      cores: apiProduct.cores || {},\n      ativo: apiProduct.active,\n      criadoEm: apiProduct.createAt,\n      // Campos simulados que não existem na API\n      rating: 4.5 + Math.random() * 0.8,\n      // Rating aleatório entre 4.5-5.3\n      avaliacoes: Math.floor(Math.random() * 200) + 50 // Avaliações aleatórias entre 50-249\n    };\n  }\n\n  // Transformar dados de categoria da API\n  transformCategoriaData(apiCategory) {\n    return {\n      id: apiCategory.id,\n      nome: apiCategory.nome,\n      slug: apiCategory.slug,\n      descricao: apiCategory.descricao || '',\n      imagem: this.getImageUrl(apiCategory.imageUrl, 'DISPLAY'),\n      totalProdutos: apiCategory.totalProdutos || 0,\n      ativo: apiCategory.ativo\n    };\n  }\n\n  // Buscar produtos por categoria\n  async getProdutosPorCategoria(categoria, page = 0, size = 12) {\n    // Como não há endpoint específico para filtrar por categoria,\n    // vamos pegar todos os produtos e filtrar no frontend\n    const response = await this.getProdutos(page, size * 3); // Pegar mais para compensar filtro\n    const produtosTransformados = response.content.map(produto => this.transformProdutoData(produto));\n    if (categoria === 'Todos') {\n      return {\n        content: produtosTransformados.slice(0, size),\n        page: response.page\n      };\n    }\n    const produtosFiltrados = produtosTransformados.filter(produto => produto.categoria.toLowerCase() === categoria.toLowerCase());\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n\n  // Buscar produtos por subcategoria\n  async getProdutosPorSubcategoria(categoria, subcategoria, page = 0, size = 12) {\n    // Pegar todos os produtos e filtrar por categoria e subcategoria\n    const response = await this.getProdutos(page, size * 4); // Pegar mais para compensar filtro duplo\n    const produtosTransformados = response.content.map(produto => this.transformProdutoData(produto));\n    let produtosFiltrados = produtosTransformados;\n\n    // Filtrar por categoria (se não for \"Todos\")\n    if (categoria !== 'Todos') {\n      produtosFiltrados = produtosFiltrados.filter(produto => produto.categoria.toLowerCase() === categoria.toLowerCase());\n    }\n\n    // Filtrar por subcategoria (se não for \"Todas\")\n    if (subcategoria !== 'Todas') {\n      produtosFiltrados = produtosFiltrados.filter(produto => produto.subcategoria.toLowerCase() === subcategoria.toLowerCase());\n    }\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n}\n\n// Criar instância singleton\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","makeRequest","endpoint","options","response","fetch","headers","ok","Error","status","data","json","error","console","getCategorias","content","getSubcategorias","getSubcategoriasPorCategoria","categoriaId","getProdutos","page","size","getProdutoPorId","id","getProdutosRelacionados","getImageUrl","imageUrl","type","transformProdutoData","apiProduct","_apiProduct$category","_apiProduct$subcatego","_apiProduct$price","nome","name","categoria","category","subcategoria","subcategory","preco","price","toFixed","replace","precoDesconto","discountPrice","imagem","imageURL","imagemIcone","imagemMedia","descricao","description","descricaoCompleta","completeDescription","ingredientes","ingredients","modoUso","howToUse","tags","slug","tipo","cores","ativo","active","criadoEm","createAt","rating","Math","random","avaliacoes","floor","transformCategoriaData","apiCategory","totalProdutos","getProdutosPorCategoria","produtosTransformados","map","produto","slice","produtosFiltrados","filter","toLowerCase","totalElements","length","totalPages","ceil","getProdutosPorSubcategoria","apiService"],"sources":["/Users/wiily/Personal Projects/Orders/PS Cosmeticos/Front-end/ps-cosmeticos/src/services/api.js"],"sourcesContent":["// src/services/api.js\nconst API_BASE_URL = 'http://localhost:8080/api/v1';\n\nclass ApiService {\n  // Método auxiliar para fazer requests\n  async makeRequest(endpoint, options = {}) {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('API Request Error:', error);\n      throw error;\n    }\n  }\n\n  // Pegar todas as categorias\n  async getCategorias() {\n    const response = await this.makeRequest('/categorias');\n    return response.content || [];\n  }\n\n  // Pegar todas as subcategorias\n  async getSubcategorias() {\n    const response = await this.makeRequest('/subcategorias');\n    return response.content || [];\n  }\n\n  // Pegar subcategorias por categoria\n  async getSubcategoriasPorCategoria(categoriaId) {\n    const response = await this.makeRequest(`/categorias/subcategorias/${categoriaId}`);\n    return response.data || [];\n  }\n\n  // Pegar todos os produtos\n  async getProdutos(page = 0, size = 12) {\n    const response = await this.makeRequest(`/produtos?page=${page}&size=${size}`);\n    return response.data || { content: [], page: {} };\n  }\n\n  // Pegar produto por ID\n  async getProdutoPorId(id) {\n    const response = await this.makeRequest(`/produtos/${id}`);\n    return response.data;\n  }\n\n  // Pegar produtos relacionados\n  async getProdutosRelacionados(id) {\n    const response = await this.makeRequest(`/produtos/relacionados/${id}`);\n    return response.data || { content: [], page: {} };\n  }\n\n  // Pegar URL da imagem com tipo específico\n  getImageUrl(imageUrl, type = 'DISPLAY') {\n    if (!imageUrl) return null;\n    return `${imageUrl}?type=${type}`;\n  }\n\n  // Transformar dados da API para o formato esperado pelo frontend\n  transformProdutoData(apiProduct) {\n    return {\n      id: apiProduct.id,\n      nome: apiProduct.name,\n      categoria: apiProduct.category?.nome || 'Sem categoria',\n      subcategoria: apiProduct.subcategory?.nome || 'Sem subcategoria',\n      preco: `R$ ${apiProduct.price?.toFixed(2).replace('.', ',')}`,\n      precoDesconto: apiProduct.discountPrice \n        ? `R$ ${apiProduct.discountPrice.toFixed(2).replace('.', ',')}` \n        : null,\n      imagem: this.getImageUrl(apiProduct.imageURL, 'DISPLAY'),\n      imagemIcone: this.getImageUrl(apiProduct.imageURL, 'ICON'),\n      imagemMedia: this.getImageUrl(apiProduct.imageURL, 'MID-DISPLAY'),\n      descricao: apiProduct.description || '',\n      descricaoCompleta: apiProduct.completeDescription || '',\n      ingredientes: apiProduct.ingredients || [],\n      modoUso: apiProduct.howToUse || '',\n      tags: apiProduct.tags || [],\n      slug: apiProduct.slug,\n      tipo: apiProduct.tipo,\n      cores: apiProduct.cores || {},\n      ativo: apiProduct.active,\n      criadoEm: apiProduct.createAt,\n      // Campos simulados que não existem na API\n      rating: 4.5 + (Math.random() * 0.8), // Rating aleatório entre 4.5-5.3\n      avaliacoes: Math.floor(Math.random() * 200) + 50, // Avaliações aleatórias entre 50-249\n    };\n  }\n\n  // Transformar dados de categoria da API\n  transformCategoriaData(apiCategory) {\n    return {\n      id: apiCategory.id,\n      nome: apiCategory.nome,\n      slug: apiCategory.slug,\n      descricao: apiCategory.descricao || '',\n      imagem: this.getImageUrl(apiCategory.imageUrl, 'DISPLAY'),\n      totalProdutos: apiCategory.totalProdutos || 0,\n      ativo: apiCategory.ativo,\n    };\n  }\n\n  // Buscar produtos por categoria\n  async getProdutosPorCategoria(categoria, page = 0, size = 12) {\n    // Como não há endpoint específico para filtrar por categoria,\n    // vamos pegar todos os produtos e filtrar no frontend\n    const response = await this.getProdutos(page, size * 3); // Pegar mais para compensar filtro\n    const produtosTransformados = response.content.map(produto => \n      this.transformProdutoData(produto)\n    );\n\n    if (categoria === 'Todos') {\n      return {\n        content: produtosTransformados.slice(0, size),\n        page: response.page\n      };\n    }\n\n    const produtosFiltrados = produtosTransformados.filter(produto => \n      produto.categoria.toLowerCase() === categoria.toLowerCase()\n    );\n\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n\n  // Buscar produtos por subcategoria\n  async getProdutosPorSubcategoria(categoria, subcategoria, page = 0, size = 12) {\n    // Pegar todos os produtos e filtrar por categoria e subcategoria\n    const response = await this.getProdutos(page, size * 4); // Pegar mais para compensar filtro duplo\n    const produtosTransformados = response.content.map(produto => \n      this.transformProdutoData(produto)\n    );\n\n    let produtosFiltrados = produtosTransformados;\n\n    // Filtrar por categoria (se não for \"Todos\")\n    if (categoria !== 'Todos') {\n      produtosFiltrados = produtosFiltrados.filter(produto => \n        produto.categoria.toLowerCase() === categoria.toLowerCase()\n      );\n    }\n\n    // Filtrar por subcategoria (se não for \"Todas\")\n    if (subcategoria !== 'Todas') {\n      produtosFiltrados = produtosFiltrados.filter(produto => \n        produto.subcategoria.toLowerCase() === subcategoria.toLowerCase()\n      );\n    }\n\n    return {\n      content: produtosFiltrados.slice(0, size),\n      page: {\n        ...response.page,\n        totalElements: produtosFiltrados.length,\n        totalPages: Math.ceil(produtosFiltrados.length / size)\n      }\n    };\n  }\n}\n\n// Criar instância singleton\nconst apiService = new ApiService();\n\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}